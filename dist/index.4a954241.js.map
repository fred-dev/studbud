{"mappings":"IAgCAA,QAzBIC,WACIC,QAAQC,IAAGC,KAAMC,OAGrBC,QAAQC,QACCC,YAAcD,EACnBL,QAAQC,IAAGC,KAAMI,kBAEZH,MAAMI,SAASC,IAChBA,EAAKC,UAAUC,OAAM,UACAR,KAAbS,QAAQH,KAAUH,GACtBG,EAAKC,UAAUG,IAAG,kBAGrBC,MAAMN,SAASO,IAChBA,EAAKC,MAAMC,QAAO,UAEtBC,SAASC,eAAeb,GAAQU,MAAMC,QAAO,QAGjDL,QAAQH,UACGA,EAAKW,KAAKC,MAAK,KAAM,eA3BpBjB,EAAOU,QACVV,MAAQA,OACRU,MAAQA,OACRP,YAAc,OCH3B,MAAMe,EAAOJ,SAASC,eAAc,YACrBD,SAASK,cAAa,sBAGrC,IAAIC,EAAWN,SAASK,cAAa,kBAGjCE,EAAYP,SAASC,eAAc,aACnCO,EAAeR,SAASC,eAAc,gBACtCQ,EAAsBT,SAASC,eAAc,uBAC7CS,EAAqBV,SAASC,eAAc,sBAC5CU,EAAgBX,SAASC,eAAc,iBAG3CG,EAAKQ,iBAAgB,UAAS,SAAWC,GACrCA,EAAMC,iBACN,IAAIC,EAAOR,EAAUS,MACjBC,EAAUT,EAAaQ,MACvBE,EAAiBT,EAAoBO,MACrCG,EAAgBT,EAAmBM,MACnCI,EAAiBT,EAAcU,QAAQV,EAAcW,eAAeN,MACpED,YASSQ,EAAiBN,EAASE,EAAeC,EAAgBF,EAAgBM,GACtF,IACIC,GADI,IAAIC,MACQC,cAChBZ,EAAI,CACJa,GAAIF,KAAKG,sBACTN,UACAN,cACAQ,gBACAN,iBACAD,iBACAE,gBACAD,mBACAK,GAEJM,EAAcC,KAAKhB,GACnBhC,QAAQC,IAAI8C,YAKIf,GAGhBiB,IAGA,IAAIC,EAAOjC,SAASkC,cAAa,MACjCD,EAAKE,aAAY,UAAYpB,EAAKa,IAClCK,EAAKG,UAAS,MAAWrB,EAAKQ,gBAAe,OAE7CjB,EAAS+B,YAAYJ,GAGrB,IAAIK,EAAYtC,SAASkC,cAAa,UAClCK,EAAgBvC,SAASwC,eAAc,eAC3CF,EAAUD,YAAYE,GACtBN,EAAKI,YAAYC,GAIjBA,EAAU1B,iBAAgB,SAAQ,SAAWC,GACzCA,EAAMC,iBACN,IAAIc,EAAKf,EAAM4B,OAAOC,cAAcC,aAAY,WAC5CC,EAAQd,EAAce,WAAUC,GAAQA,EAAKlB,KAAOmB,OAAOnB,eAY1CoB,EAAKJ,GAC1BA,GAAQ,GACRI,EAAIC,OAAOL,EAAO,GAblBM,CAAoBpB,EAAec,GACnC7D,QAAQC,IAAI8C,GACZE,IACAC,EAAKxC,YAITW,EAAK+C,QAnCLC,CAAWrC,GAxBPsC,CAAQtC,EAAME,EAASE,EAAeC,EAAgBF,GAAgB,MAK9E,IAAIY,EAAa,YAmERE,IACDF,EAAcwB,OAAS,EACvBtD,SAASC,eAAc,aAAcH,MAAMC,QAAO,OAElDC,SAASC,eAAc,aAAcH,MAAMC,QAAO,QChG1D,MAAMwD,EAAQvD,SAASwD,iBAAgB,0BAGvC,IAAIC,EAAM,IAAI5E,EAAW0E,EAFXvD,SAASwD,iBAAgB,oBAGvCC,EAAI3E,WAEJyE,EAAMjE,SAAO,SAAUC,GACnBA,EAAKqB,iBAAgB,SAAQ,WACzB,IAAIxB,EAAUqE,EAAI/D,QAAQH,GAC1BkE,EAAItE,QAAQC,SAOpB,IAAIsE,EAAS,IAAI7E,EAHCmB,SAASwD,iBAAgB,0BACzBxD,SAASwD,iBAAgB,wBAG3CE,EAAOxE,MAAMI,SAASC,IAClBA,EAAKqB,iBAAgB,SAAQ,WACzB,IAAIxB,EAASsE,EAAOhE,QAAQH,GAC5BmE,EAAOvE,QAAQC","sources":["public/components/navigation.js","public/components/tasklist.js","public/script.js"],"sourcesContent":["class Navigation {\n    constructor(links, pages){\n        this.links = links;\n        this.pages = pages;\n        this.currentPage = null;\n    }\n\n    getLinks() {\n        console.log(this.links);\n    }\n\n    setPage(pageId){\n        this.currentPage = pageId;\n        console.log(this.currentPage);\n\n        this.links.forEach((link) => {\n            link.classList.remove('active');\n            if(this.getHash(link) === pageId){\n                link.classList.add('active');\n            }\n        })\n        this.pages.forEach((page) =>{\n            page.style.display = 'none';\n        })\n        document.getElementById(pageId).style.display = \"block\";\n    }\n\n    getHash(link){\n        return link.href.split(\"#\")[1];\n    }\n}\n\nexport default Navigation;","// Basic form DOM elements\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\")\n\n// Selector for the tasklist output\nvar tasklist = document.querySelector(\"#tasklist > ul\");\n\n// DOM elements for the task input fields\nvar taskInput = document.getElementById(\"taskInput\");\nvar dueDateInput = document.getElementById(\"dueDateInput\");\nvar completionTimeInput = document.getElementById(\"completionTimeInput\");\nvar estimatedTimeInput = document.getElementById(\"estimatedTimeInput\");\nvar priorityInput = document.getElementById(\"priorityInput\");\n\n// Form submission event listener\nform.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    let task = taskInput.value;\n    let dueDate = dueDateInput.value;\n    let completionTime = completionTimeInput.value;\n    let estimatedTime = estimatedTimeInput.value;\n    let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n    if (task) {\n        addTask(task, dueDate, estimatedTime, priorityRating, completionTime, false);\n    }\n})\n\n// Create global array to track tasks\nvar taskListArray = [];\n\n// Function to add task with user inputs as parameters\nfunction addTask(taskDescription, dueDate, estimatedTime, priorityRating, completionTime, completionStatus) {\n    let d = new Date();\n    let dateCreated = d.getFullYear();\n    let task = {\n        id: Date.now(),\n        taskDescription,\n        dueDate,\n        dateCreated,\n        estimatedTime,\n        completionTime,\n        priorityRating,\n        estimatedTime,\n        completionStatus\n    };\n    taskListArray.push(task);\n    console.log(taskListArray);\n    renderTask(task);\n}\n\n// Function to display task on screen\nfunction renderTask(task) {\n\n    // Call function - checks if a task has been added\n    updateEmpty();\n\n    // Create HTML elements\n    let item = document.createElement(\"li\");\n    item.setAttribute('data-id', task.id);\n    item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n    tasklist.appendChild(item);\n\n    // Extra Task DOM elements\n    let delButton = document.createElement(\"button\");\n    let delButtonText = document.createTextNode(\"Delete Task\");\n    delButton.appendChild(delButtonText);\n    item.appendChild(delButton);\n\n\n    // Event Listeners for DOM elements\n    delButton.addEventListener(\"click\", function(event) {\n        event.preventDefault();\n        let id = event.target.parentElement.getAttribute('data-id');\n        let index = taskListArray.findIndex(task => task.id === Number(id));\n        removeItemFromArray(taskListArray, index)\n        console.log(taskListArray);\n        updateEmpty();\n        item.remove();\n    })\n\n    // Clear the input form\n    form.reset();\n}\n\n// Function to remove item from array\nfunction removeItemFromArray(arr, index) {\n    if (index > -1) {\n        arr.splice(index, 1)\n    }\n    return arr;\n}\n\n\n// Function to hide the 'you haven't added any tasks' text\nfunction updateEmpty() {\n    if (taskListArray.length > 0) {\n        document.getElementById('emptyList').style.display = 'none';\n    } else {\n        document.getElementById('emptyList').style.display = 'block';\n    }\n}","import Navigation from \"./components/navigation\";\nimport \"./components/tasklist\";\n\nconst links = document.querySelectorAll('.top-nav > ul > li > a');\nconst pages = document.querySelectorAll('.page-container');\n\nvar nav = new Navigation(links, pages);\nnav.getLinks();\n\nlinks.forEach(function(link) {\n    link.addEventListener('click', function() {\n        let pageId =  nav.getHash(link);\n        nav.setPage(pageId);\n    })\n})\n\nconst sublinks  = document.querySelectorAll('.sub-nav > ul > li > a');\nconst subPages  = document.querySelectorAll('.sub-page-container');\n\nvar subNav = new Navigation(sublinks, subPages);\nsubNav.links.forEach((link) =>{\n    link.addEventListener('click', function (){\n        let pageId = subNav.getHash(link);\n        subNav.setPage(pageId);\n    })\n})\n"],"names":["$6c1aeb87936070be$export$9099ad97b570f7c","getLinks","console","log","this","links","setPage","pageId","currentPage","forEach","link","classList","remove","getHash","add","pages","page","style","display","document","getElementById","href","split","$fad5de670bc95072$var$form","querySelector","$fad5de670bc95072$var$tasklist","$fad5de670bc95072$var$taskInput","$fad5de670bc95072$var$dueDateInput","$fad5de670bc95072$var$completionTimeInput","$fad5de670bc95072$var$estimatedTimeInput","$fad5de670bc95072$var$priorityInput","addEventListener","event","preventDefault","task","value","dueDate","completionTime","estimatedTime","priorityRating","options","selectedIndex","taskDescription","completionStatus","dateCreated","Date","getFullYear","id","now","$fad5de670bc95072$var$taskListArray","push","$fad5de670bc95072$var$updateEmpty","item","createElement","setAttribute","innerHTML","appendChild","delButton","delButtonText","createTextNode","target","parentElement","getAttribute","index","findIndex","task1","Number","arr","splice","$fad5de670bc95072$var$removeItemFromArray","reset","$fad5de670bc95072$var$renderTask","$fad5de670bc95072$var$addTask","length","$1301faf153e0d4f3$var$links","querySelectorAll","$1301faf153e0d4f3$var$nav","$1301faf153e0d4f3$var$subNav"],"version":3,"file":"index.4a954241.js.map"}